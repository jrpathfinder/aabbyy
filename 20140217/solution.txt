a:
二分图最优匹配，很容易证明在最优匹配下，肯定不会存在两条连线相交的情况，否则肯定不是最优匹配。

b:
构造一个满足有N个不同联通块的，并且联通块间也相互联通的空间结构。

e:
给出先序表示的式子f(x)，模拟一元方程f(x)=0的计算，可用一个分数类处理。
注意判断多解和无解的情况。

g:
很赞的区间DP求概率题。用p[i][j][L/R][L/R]表示令牌已经被区间[i,j]中的所有人都拿过，且当前令牌在i(L)或者j(R)手上，下一次传出[i,j]这个区间是 i - 1(L)或者j + 1(R)的概率。用dp[i][j][L/R]表示令牌已经在[i,j]区间，下一次传出这个区间的第一个位置是i - 1(L)或者j + 1(R)的概率。
p[i][j][L/R][L/R]可以直接利用[i + 1,j] [i,j - 1]这些已经区间来求出
下面举例求p[i][j][L][L].设a[i]为读入的概率数组
用f(x,j,L)表示令牌在[x,j]这个区间，且令牌在x手上，传到j + 1之前传到i - 1的概率
则有 f[i,j,L] = (1 - a[i]) + a[i] * f[i + 1,j,L)
f[i + 1,j,L] = p[i + 1][j][L][L] * f[i,j,L]
注意到事实 p[i + 1][j][L][L] + p[i + 1][j][L][R] = 1
联立上面方程即可解出f[i,j,L]，即p[i][j][L][L]。
这题有个特别需要注意的地方，就是精度，比如虽然p[i][j][L][L] + p[i][j][L][R] = 1显然成立，但是求出p[i][j][L][L]后p[i][j][L][R] = 1 - p[i][j][L][L]，那么很可能出现精度问题。

这题还存在至少两种其他解法。
法1）dp[i][j][k]表示令牌已经传完了[i,j]这个区间，目前在第k个人手上的概率，dp[i][j][i]和dp[i][j][j]可以直接计算，然后对于 i < k < j，dp[i][j][k]至于dp[i][j][k - 1]和dp[i][j][k + 1]有关，利用追赶法解三对角矩阵，复杂度O(N^3)
法2）对于a,b,c这三个的，我们算出先传到a - 1的概率和先传到c + 1的概率，然后直接替换，这样就可以删掉b这个点，一直不断地合并删点，最后都可以解。复杂度O(N)
需要注意的都是精度问题。

h:
规律题。

i:
模拟题，注意考虑清楚各种情况。

j:
按照一定顺序给点集排序，如果两幅想象相似，那么两个点序列肯定是按顺序一一对应的。
在此基础上对点对的相对位置和向量进行判断，看是否和原图一致。

l:
按照给定的字符串建立Trie，显然当前的Trie是一个DFA，由于语言集是有限的，所以最后的最简DFA一定是一个DAG。
于是，对Trie的每个子树进行hash，统计不同的子树个数即是答案。