b:
有9个连续，可以先求出最多8个连续的情况。 对于至多8个连续，首先是断开环，以1为断点，并枚举如果1选，左边和右边各选多少个的情况，然后情况简化成一条链。求反面，dp[i][j]表示一个长度为i的链，已经有多少个不选，而且第 i 个是必须不能选的。且上一个不选的与 i 的距离是 <= 9。这个数组可以预处理出来，求出总情况 / C(N,M)即最终结果。

c:
可以证明在同一part里面，要么先拿完item，要么先拿完time。
于是对于一个确定的已访问集合，IV和TV是可以直接得出，然后状态压缩dp即可。

d:
读题难度：★★★★★★★★★★   解题难度：★★★
题意是有一些射线（不是直线）在一个整点矩阵中，问N*M个点中到射线的整数距离（去尾，向下取整）最远是多少。
先找到距离是0的点，然后bfs即可。

e:
跳棋游戏，没得操作的人输，在dag上暴力搜索找必胜态和必败态。

f:
显然环上的边肯定不是必经，所以缩点成树，然后求出0到n-1通过的树边即可。

g:
利用点到原点的距离，联立解方程得到点在抛物线中的时间段，对时间点排序求最大重合层数就是答案。
注意特判点是原点的情况。

h:
注意到等级至少为l，思考补集。
设dp[i][j]表示已经用了i个element，分成了j个集合，每个集合的大小都小于l。
转移:dp[i][j] = ∑{dp[i - k][j - 1] * C[m - i + k][k] | 0 <= k && k < l && k <= i};
最后ans = (n^m - dp[m][n]) / n^m，需要用到高精度。

i:
因为区间是递增的，所以可以直接dp。
dp[i] = s[i] + max{dp[i + k] | x[i] <= k && k < y[i]};
利用线段树优化做到O(nlogn)。

k:
模拟题，按照题目给的公式步骤实现即可。

l:
贪心，从最后一天倒推。

m:
安心，肯定是尽量提高L然后再生产食物，通过简单计算即可得出结果。