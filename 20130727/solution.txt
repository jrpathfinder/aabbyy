A:
很容易得到dp的转移方程，但是直接做复杂度是O(n^3)。
这里需要用到四边形不等式优化。

B:
一道dp统计的题目，全部跑一次，然后对于每个询问O(1)输出即可，利用记忆化搜索很容易解决。

C:
模拟题，利用trie压缩存储字符串，然后按照题目的要求去模拟就行了。
需要注意的是，如果当前是某个单词的结尾是不可以进行补全的。

D:
签到题。

E:
二分答案，然后求积分判定就可以了，辛普森或龙贝格均可。

F:
需要观察到，对于两个相邻的连通块，只需要改变一个旋转板的方向就可以合并两个连通块。
于是问题等价于合并n个连通块的最小代价，显然是n - 1。

G:
博弈，问题实际上等价于原图是否存在完备匹配。

H:
签到题2。

I:
数据结构题目，很容易发现一点就是，正数是不影响最终答案的。
于是只需要维护区间里面负数的个数以及零的个数。
线段树可以完美解决，但用树状数组代码更短。
利用两个树状数组，一个维护负数，一个维护零。

J:
首先，对于两个不在同意连通分量的点，他们是无法汇合的。
于是只考虑同一连通分量里面的询问，他们必定是可以汇合，自行证明。
对于一个有n个点的连通分量，那么它有n条边，于是这个连通分量必定有一个环。
考虑删除环上任意一条边e = (u -> v)，使得连通分量变成一颗树，于是对于一个询问a，b：
只有两种情况:
(1)他们汇合不经过e，于是他们汇合的路径必定是a-lca(a,b)-b这条路。
(2)他们汇合经过e，于是需要一个a到达u(v)，b到达v(u)，然后再从u到达v。
取min即为答案，于是你会发现我一直没有考虑边的方向。
对的，此题边的方向性确实不会影响到答案，于是只需要当成无向图处理就行，自行证明。
这里有个实现技巧就是，可能会有k个连通块（既森林），可以增加一个虚拟点0作为根，连向所有的子树，形成一颗大的树。对于询问a，b，如果lca(a, b) == 0, 即为无法到达，否则再做后续处理。
